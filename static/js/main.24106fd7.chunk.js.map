{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","toast","success","axios","post","then","response","age","salary","hobby","location","this","Container","fluid","className","Header","as","Form","onSubmit","Field","placeholder","type","onChange","Button","color","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAQqBA,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,SAACC,GACf,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,SAZzB,EAenBC,cAAgB,SAAAL,GACdA,EAAEM,iBACFC,QAAQC,IAAI,EAAKC,OACjBF,QAAQC,IAAI,QACZE,IAAMC,QAAQ,yCAGdC,IAAMC,KAAK,qEAAsE,EAAKJ,OACrFK,MAAK,SAAAC,GACJR,QAAQC,IAAIO,OAtBd,EAAKN,MAAQ,CACXN,KAAM,GACNa,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,SAAU,IAPK,E,0CA8BnB,WAAS,IAAD,EACyCC,KAAKX,MAA5CN,EADF,EACEA,KAAMa,EADR,EACQA,IAAKC,EADb,EACaA,OAAQC,EADrB,EACqBA,MADrB,EAC4BC,SAElC,OACE,eAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,GAAI,KAAZ,kCACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAOI,SAAUP,KAAKf,cAAtC,UACE,eAACqB,EAAA,EAAKE,MAAN,WACE,yCACA,uBAAOC,YAAY,kBAAkBC,KAAK,OAAO3B,KAAO,OAAOC,MAASD,EAAM4B,SAAYX,KAAKrB,mBAEjG,eAAC2B,EAAA,EAAKE,MAAN,WACE,wCACA,uBAAOC,YAAY,iBAAiBC,KAAK,SAAS3B,KAAO,MAAMC,MAASY,EAAKe,SAAUX,KAAKrB,mBAE9F,eAAC2B,EAAA,EAAKE,MAAN,WACE,2CACA,uBAAOC,YAAY,oBAAoBC,KAAK,SAAS3B,KAAO,SAASC,MAASa,EAAQc,SAAUX,KAAKrB,mBAEvG,eAAC2B,EAAA,EAAKE,MAAN,WACE,0CACA,uBAAOC,YAAY,mBAAmBC,KAAK,OAAO3B,KAAO,QAAQC,MAASc,EAAOa,SAAUX,KAAKrB,mBAalG,cAACiC,EAAA,EAAD,CAAQC,MAAM,OAAOH,KAAK,SAA1B,oBACA,cAAC,IAAD,CACFI,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,c,GA5EaC,aCIlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24106fd7.chunk.js","sourcesContent":["//import logo from './logo.svg';\nimport axios from 'axios';\nimport './App.css';\nimport React, {Component} from 'react'\nimport {Button, Form, Container, Header, FormField} from 'semantic-ui-react'\n//import {NotificationContainer, NotificationManager} from 'react-notifications';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default class App extends Component {\n  // state = { counter: 0 };\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      age: '',\n      salary: '',\n      hobby: '',\n      location: ''\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({[e.target.name] : e.target.value})\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n    console.log(\"hola\");\n    toast.success(\"Thank you for your event information!\");\n    \n\n    axios.post('https://sheet.best/api/sheets/4b3a5b3b-e79d-406b-86de-72d2a8cdc1df', this.state)\n    .then(response => {\n      console.log(response);\n    })\n    \n    \n  }\n\n  render(){\n    const { name, age, salary, hobby, location } = this.state; \n\n    return(\n      <Container fluid className=\"container\">\n        <Header as ='h2'>React Google Sheets!</Header>\n        <Form className=\"form\" onSubmit={this.submitHandler}>\n          <Form.Field>\n            <label>Name</label>\n            <input placeholder='Enter your name' type=\"text\" name = \"name\" value = {name} onChange = {this.changeHandler} />\n          </Form.Field>\n          <Form.Field>\n            <label>Age</label>\n            <input placeholder='Enter your age' type=\"number\" name = \"age\" value = {age} onChange={this.changeHandler}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Salary</label>\n            <input placeholder='Enter your salary' type=\"number\" name = \"salary\" value = {salary} onChange={this.changeHandler}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Hobby</label>\n            <input placeholder='Enter your hobby' type=\"text\" name = \"hobby\" value = {hobby} onChange={this.changeHandler} />\n          </Form.Field>\n          \n          {/* <FormField>\n          <label>Location</label>\n            <select class=\"ui dropdown\">\n              <option value=\"\">Location</option>\n              <option value=\"1\" type=\"text\" name=\"location\" value = {location} onChange={this.changeHandler}>District of Columbia</option>\n              <option value=\"0\">Puerto Rico</option>\n            </select>\n          </FormField> */}\n          \n          \n          <Button color=\"blue\" type='submit'>Submit</Button>\n          <ToastContainer \n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        />\n\n        </Form>\n\n      </Container>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}